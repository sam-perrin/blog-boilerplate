{"componentChunkName":"component---src-templates-post-template-jsx","path":"/posts/Deploying-your-first-App-into-a-Workload-Cluster","result":{"data":{"site":{"siteMetadata":{"title":"Blog by Sam Perrin","subtitle":"Automation Consultant, currently working at Xtravirt. Interested in all things automation/devops related.","copyright":"Â© All rights reserved.","author":{"name":"Sam Perrin","twitter":"sam_perrin"},"disqusShortname":"","url":"https://samperrin.netlify.com"}},"markdownRemark":{"id":"628356f7-50fa-589d-b06a-fa035eeb32dd","html":"<p><strong>Prerequisites</strong></p>\n<ul>\n<li>Access to a working Workload Cluster (see <a href=\"Cluster-API-Workload-Cluster--vSphere-\">Cluster API Workload Cluster (vSphere)</a>) via <code>kubectl</code></li>\n</ul>\n<p>Set your <code>kubeconfig</code> so you can access the workload cluster. </p>\n<p>If you followed the steps in the linked article above, you should hopefully have the environment variable <code>$WORKLOAD_CLUSTER_NAME</code> already set, and its <code>kubeconfig</code> file is located in <code>$HOME/$WORKLOAD_CLUSTER_NAME/kubeconfig</code>. </p>\n<p>This step assumes you followed <a href=\"Cluster-API-Workload-Cluster--vSphere-\">Cluster API Workload Cluster (vSphere)</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber 0\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"token comment\">#Replace the value to match the name of your workload cluster</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">WORKLOAD_CLUSTER_NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"wlc01\"</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">KUBECONFIG</span><span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/<span class=\"token variable\">$WORKLOAD_CLUSTER_NAME</span>/kubeconfig\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>Create a development namespace</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber 0\" class=\"language-shell line-numbers\"><code class=\"language-shell\">kubectl create namespace development</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Create a simple deployment. The below will create a YAML file in the <code>~/Development</code> directory. </p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber 0\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"token function\">mkdir</span> -p <span class=\"token environment constant\">$HOME</span>/Development\n<span class=\"token function\">tee</span> <span class=\"token environment constant\">$HOME</span>/Development/my-nginx-deployment.yaml <span class=\"token operator\">></span>/dev/null <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: my-nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx \n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.14.2\n        ports:\n        - containerPort: 80\nEOF</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Apply the Deployment, this will deploy <code>nginx</code> with the deployment name <code>my-nginx-deployment</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber 0\" class=\"language-shell line-numbers\"><code class=\"language-shell\">kubectl apply -f <span class=\"token string\">\"<span class=\"token environment constant\">$HOME</span>/Development/my-nginx-deployment.yaml\"</span> --namespace development</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Check to see if our Deployment has been created. You should hopefully see all Pods <code>READY</code> and <code>Running</code></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber 0\" class=\"language-shell line-numbers\"><code class=\"language-shell\">kubectl get deployment -n development\nkubectl get pod -n development</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Alternative imperative commands to create the same deployment, with a slightly different name.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber 0\" class=\"language-shell line-numbers\"><code class=\"language-shell\">kubectl create deployment my-nginx-deployment2 --image<span class=\"token operator\">=</span>nginx:1.14.2 --namespace<span class=\"token operator\">=</span>development\nkubectl </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><strong>Previous Article in this Series</strong>: <a href=\"Cluster-API-Setup-Steps--vSphere-\">Cluster API Setup Steps (vSphere)</a></p>","fields":{"tagSlugs":["/tags/development/","/tags/kubernetes/","/tags/vmware/"],"slug":"/posts/Deploying-your-first-App-into-a-Workload-Cluster"},"frontmatter":{"title":"Deploying your first App into a Workload Cluster","tags":["development","kubernetes","vmware"],"date":"2020-08-11T18:32:17.019Z","description":"Deploy your first App in to the workload cluster that was deployed with Cluster API"}}},"pageContext":{"slug":"/posts/Deploying-your-first-App-into-a-Workload-Cluster"}}}