{"componentChunkName":"component---src-templates-post-template-jsx","path":"/posts/ClusterAPI-Workload-Cluster--vSphere-","result":{"data":{"site":{"siteMetadata":{"title":"Blog by Sam Perrin","subtitle":"Automation Consultant, currently working at Xtravirt. Interested in all things automation/devops related.","copyright":"© All rights reserved.","author":{"name":"Sam Perrin","twitter":"sam_perrin"},"disqusShortname":"","url":"https://samperrin.netlify.com"}},"markdownRemark":{"id":"08e6531c-d8e6-5f87-b5e4-881aba44ca47","html":"<p><strong>Prerequisites</strong></p>\n<ul>\n<li>PhotonOS Kubernetes template within vSphere</li>\n<li>HAProxy template within vSphere</li>\n<li>Working Management Cluster (follow these steps <a href=\"ClusterAPI-Setup-Steps--vSphere-\">ClusterAPI Setup Steps (vSphere)</a>)</li>\n<li>Access to the Management Cluster with <code class=\"language-text\">kubectl</code> </li>\n<li>Access to a machine with <code class=\"language-text\">clusterctl</code></li>\n</ul>\n<p>Create clusterctl.yaml to store configuration values. Replace the values where required. Take particular note of values between &#x3C; and >.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber 0\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"token function\">mkdir</span> -p ~/.cluster-api\n<span class=\"token function\">tee</span> ~/.cluster-api/clusterctl.yaml <span class=\"token operator\">></span>/dev/null <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF\n## -- Controller settings -- ##\nVSPHERE_USERNAME: \"administrator@vsphere.local\"            # The username used to access the remote vSphere endpoint\nVSPHERE_PASSWORD: \"vmware1\"                                # The password used to access the remote vSphere endpoint\n\n## -- Required workload cluster default settings -- ##\nVSPHERE_SERVER: \"vcenter1.domain.com\"                                 # The vCenter server IP or FQDN\nVSPHERE_DATACENTER: \"Datacenter\"                                      # The vSphere datacenter to deploy the management cluster on\nVSPHERE_DATASTORE: \"Datastore\"                                        # The vSphere datastore to deploy the management cluster on\nVSPHERE_NETWORK: \"VM Network\"                                         # The VM network to deploy the management cluster on\nVSPHERE_RESOURCE_POOL: \"&lt;ClusterName>/Resources/&lt;ResourcePoolName>\"   # The vSphere resource pool for your VMs\nVSPHERE_FOLDER: \"vm/&lt;FolderName>/&lt;ChildFolderName>\"                   # The VM folder for your VMs. Set to \"\" to use the root vSphere folder\nVSPHERE_TEMPLATE: \"photon-3-kube-v1.18.2\"                             # The VM template to use for your management cluster.\nVSPHERE_HAPROXY_TEMPLATE: \"capv-haproxy-v0.6.4\"                       # The VM template to use for the HAProxy load balancer\nVSPHERE_SSH_AUTHORIZED_KEY: \"&lt;ssh key>\"                               # The public ssh authorized key on all machines in this cluster. Set to \"\" if you don't want to enable SSH, or are using another solution.\nEOF</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Change the value of <code class=\"language-text\">WORKLOAD_CLUSTER_NAME</code> to be the name of your new workload cluster.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber 0\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">WORKLOAD_CLUSTER_NAME</span><span class=\"token operator\">=</span><span class=\"token string\">\"wlc01\"</span>\n<span class=\"token function\">mkdir</span> -p ~/<span class=\"token variable\">$WORKLOAD_CLUSTER_NAME</span>\nclusterctl config cluster <span class=\"token variable\">$WORKLOAD_CLUSTER_NAME</span> --infrastructure vsphere --kubernetes-version v1.18.2 --control-plane-machine-count <span class=\"token number\">1</span> --worker-machine-count <span class=\"token number\">3</span> <span class=\"token operator\">></span> ~/<span class=\"token variable\">$WORKLOAD_CLUSTER_NAME</span>/cluster.yaml</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>Review the cluster config file and make any required changes. Some suggestions to review are CPU, Memory, Storage and Pods CIDR range.</p>\n<p>You can use <code class=\"language-text\">sed</code> to do a find and replace within the file, the below examples are for changing the Storage and Memory on all virtual machines as part of this deployment and the Pods CIDR.</p>\n<ul>\n<li>Pod CIDR from <code class=\"language-text\">192.168.0.0/16</code> to <code class=\"language-text\">192.168.200.0/24</code></li>\n<li>Memory from <code class=\"language-text\">8192</code> to <code class=\"language-text\">4096</code></li>\n<li>Storage from <code class=\"language-text\">25</code> to <code class=\"language-text\">20</code></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber 0\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"token function\">sed</span> -i <span class=\"token string\">\"s/192.168.0.0\\/16/192.168.200.0\\/24/g\"</span> ~/<span class=\"token variable\">$WORKLOAD_CLUSTER_NAME</span>/cluster.yaml\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s/memoryMiB: 8192/memoryMiB: 4096/g\"</span> ~/<span class=\"token variable\">$WORKLOAD_CLUSTER_NAME</span>/cluster.yaml\n<span class=\"token function\">sed</span> -i <span class=\"token string\">\"s/diskGiB: 25/diskGiB: 20/g\"</span> ~/<span class=\"token variable\">$WORKLOAD_CLUSTER_NAME</span>/cluster.yaml</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>Deploy the cluster components. Monitor the deployment of virtual machines within vSphere.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber 0\" class=\"language-shell line-numbers\"><code class=\"language-shell\">kubectl apply -f ~/<span class=\"token variable\">$WORKLOAD_CLUSTER_NAME</span>/cluster.yaml</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Use <code class=\"language-text\">kubectl</code> to see cluster progress. The control planes won’t be Ready until we install a CNI in a later step.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber 0\" class=\"language-shell line-numbers\"><code class=\"language-shell\">kubectl get cluster --all-namespaces\nkubectl get kubeadmcontrolplane --all-namespaces</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Retrieve the kubeconfig file for the workload cluster, and set it as KUBECONFIG environment variable.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber 0\" class=\"language-shell line-numbers\"><code class=\"language-shell\">kubectl get secret <span class=\"token variable\">$WORKLOAD_CLUSTER_NAME</span>-kubeconfig -o<span class=\"token operator\">=</span>jsonpath<span class=\"token operator\">=</span><span class=\"token string\">'{.data.value}'</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">{</span> base64 -d <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span>/dev/null <span class=\"token operator\">||</span> base64 -D<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">></span> ~/<span class=\"token variable\">$WORKLOAD_CLUSTER_NAME</span>/kubeconfig\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">KUBECONFIG</span><span class=\"token operator\">=</span><span class=\"token string\">\"~/<span class=\"token variable\">$WORKLOAD_CLUSTER_NAME</span>/kubeconfig\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Deploy Calico CNI to <code class=\"language-text\">$WORKLOAD_CLUSTER_NAME</code>. (or any other CNI)</p>\n<p>Because we have set KUBECONFIG in the above step our kubectl commands will run against the local-control-plane cluster. If you want to be certain, add <code class=\"language-text\">--kubeconfig=&quot;~/$WORKLOAD_CLUSTER_NAME/kubeconfig&quot;</code> to the commands. </p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber 0\" class=\"language-shell line-numbers\"><code class=\"language-shell\">kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml\n<span class=\"token comment\">#Example with kubeconfig specified</span>\n<span class=\"token comment\">#kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml --kubeconfig=\"~/$WORKLOAD_CLUSTER_NAME/kubeconfig\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>You will now be able to perform cluster management operations. Some examples below.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber 0\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"token comment\">#Retrieve related vSphere VMs</span>\nkubectl get vspheremachine\n<span class=\"token comment\">#Retrieve related machines</span>\nkubectl get machine\n<span class=\"token comment\">#Retrieve additional machine details</span>\nkubectl describe machine <span class=\"token operator\">&lt;</span>machine-name<span class=\"token operator\">></span>\n<span class=\"token comment\">#Retrieve additional cluster information</span>\nkubectl describe cluster local-control-plane</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The next article will cover deploying an application to your new workload cluster. </p>\n<p><strong>Previous Article in this Series</strong>: <a href=\"ClusterAPI-Setup-Steps--vSphere-\">ClusterAPI Setup Steps (vSphere)</a></p>","fields":{"tagSlugs":["/tags/development/","/tags/kubernetes/","/tags/vmware/"],"slug":"/posts/ClusterAPI-Workload-Cluster--vSphere-"},"frontmatter":{"title":"ClusterAPI Workload Cluster (vSphere)","tags":["development","kubernetes","vmware"],"date":"2020-08-10T20:56:17.019Z","description":"Deploy your first workload cluster with Cluster API"}}},"pageContext":{"slug":"/posts/ClusterAPI-Workload-Cluster--vSphere-"}}}